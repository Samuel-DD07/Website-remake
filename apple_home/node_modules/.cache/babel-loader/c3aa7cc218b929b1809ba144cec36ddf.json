{"ast":null,"code":"var _jsxFileName = \"/Users/samueldorismond/Desktop/Projets /Personnal-Project/apple_home/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction useWindowSize() {\n  _s();\n\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\n_s(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\n\nclass ShowWindowDimensions extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Window size: \", this.state.width, \" x \", this.state.height]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n}","map":{"version":3,"sources":["/Users/samueldorismond/Desktop/Projets /Personnal-Project/apple_home/src/index.js"],"names":["React","useLayoutEffect","useState","ReactDOM","App","render","document","getElementById","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ShowWindowDimensions","Component","state","width","height","updateDimensions","setState","componentDidMount","componentWillUnmount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGAD,QAAQ,CAACE,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;;AAOA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAhC;AACAD,EAAAA,eAAe,CAAC,MAAM;AACpB,aAASU,UAAT,GAAsB;AACpBD,MAAAA,OAAO,CAAC,CAACE,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CAAP;AACD;;AACDF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,UAAlC;AACAA,IAAAA,UAAU;AACV,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,UAArC,CAAb;AACD,GAPc,EAOZ,EAPY,CAAf;AAQA,SAAOF,IAAP;AACD;;GAXQD,a;;AAaT,MAAMS,oBAAN,SAAmCjB,KAAK,CAACkB,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KADyC;;AAAA,SAKjDC,gBALiD,GAK9B,MAAM;AACvB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAER,MAAM,CAACC,UAAhB;AAA4BQ,QAAAA,MAAM,EAAET,MAAM,CAACE;AAA3C,OAAd;AACD,KAPgD;AAAA;;AAEjDT,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,kCAAoB,KAAKc,KAAL,CAAWC,KAA/B,SAAyC,KAAKD,KAAL,CAAWE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAIDG,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,KAAKO,gBAAvC;AACD;;AACDG,EAAAA,oBAAoB,GAAG;AACrBb,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKM,gBAA1C;AACD;;AAbgD","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nclass ShowWindowDimensions extends React.Component {\n  state = { width: 0, height: 0 };\n  render() {\n    return <span>Window size: {this.state.width} x {this.state.height}</span>;\n  }\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n}"]},"metadata":{},"sourceType":"module"}